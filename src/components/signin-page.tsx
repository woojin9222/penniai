'use client'
/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/ZZQmqMZYDwy
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

 import { Gabarito } from 'next/font/google'

 gabarito({
 subsets: ['latin'],
 display: 'swap',
 })

 To read more about using these font, please visit the Next.js documentation:
 - App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
 - Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
 **/
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { signIn } from "next-auth/react"
import { useState } from "react"

export function SignIn(){
    const [username, setUsername] = useState('')
    const [password, setPassword] = useState('')

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault()
        await signIn('credentials', {
            username,
            password,
            callbackUrl: '/'
        })
    }

    return (
        <div className="flex min-h-screen items-center justify-center bg-gradient-to-br from-[#f0f4ff] to-[#e6f0ff]">
            <div className="mx-4 w-full max-w-md rounded-lg bg-white p-8 shadow-lg sm:mx-0">
                <div className="space-y-6">
                    <div className="space-y-2 text-center">
                        <h1 className="text-3xl font-bold">Sign Up</h1>
                        <p className="text-muted-foreground">로그인하셈 ㅇㅇ</p>
                    </div>
                    <form className="space-y-4" onSubmit={handleSubmit}>
                        <div className="space-y-2">
                            <Label htmlFor="name">Name</Label>
                            <Input value={username}
                                   onChange={(e) => setUsername(e.target.value)} name="username" id="name" placeholder="Enter your name" required/>
                        </div>
                        <div className="space-y-2">
                            <Label htmlFor="email">Email</Label>
                            <Input id="email" type="email" placeholder="Enter your email" required/>
                        </div>
                        <div className="space-y-2">
                            <Label htmlFor="password">Password</Label>
                            <Input name="password" id="password" type="password" value={password} placeholder="Enter your password" onChange={(e) => setPassword(e.target.value)}
                                   required/>
                        </div>
                        <div className="grid grid-cols-2 gap-4">
                            <Button variant="outline">
                                <GithubIcon className="mr-2 h-4 w-4"/>
                                Sign up with GitHub
                            </Button>
                            <Button variant="outline">
                                <ChromeIcon className="mr-2 h-4 w-4"/>
                                Sign up with Google
                            </Button>
                        </div>
                        <div className="flex flex-col items-center justify-between gap-4">
                            <Button type="submit" className="w-full">
                                Sign In
                            </Button>
                            <Button variant="outline" className="w-auto">
                                Light Mode
                            </Button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    )
}

function ChromeIcon(props: any) {
    return (
        <svg
            {...props}
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
        >
            <circle cx="12" cy="12" r="10" />
            <circle cx="12" cy="12" r="4" />
            <line x1="21.17" x2="12" y1="8" y2="8" />
            <line x1="3.95" x2="8.54" y1="6.06" y2="14" />
            <line x1="10.88" x2="15.46" y1="21.94" y2="14" />
        </svg>
    )
}


function GithubIcon(props: any) {
    return (
        <svg
            {...props}
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
        >
            <path d="M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4" />
            <path d="M9 18c-4.51 2-5-2-7-2" />
        </svg>
    )
}
